#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;


int main(){
    vector< vector<int> > grid(20,vector<int>(20));
    for(int grid_i = 0;grid_i < 20;grid_i++)
    {
    	for(int grid_j = 0;grid_j < 20;grid_j++)
        {
    		cin >> grid[grid_i][grid_j];
    	}
    }
    int maximum=-1000000;
    for(int i=0;i<20;i++)
    {
        for(int j=0;j<17;j++)
        {
            int temp=1;
            for(int k=0;k<4;k++)
            {
                temp*=grid[i][j+k];
            }
            if(temp>maximum)
            {
                maximum=temp;
            }
        }
    }

    for(int i=0;i<20;i++)
    {
        for(int j=0;j<17;j++)
        {
            int temp=1;
            for(int k=0;k<4;k++)
            {
                temp*=grid[j+k][i];
            }
            if(temp>maximum)
            {
                maximum=temp;
            }
        }
    }

    for(int i=0;i<17;i++)
    {
        for(int j=0;j<17;j++)
        {
            int temp=1;
            for(int k=0;k<4;k++)
            {
                temp*=grid[i+k][j+k];
            }
            if(temp>maximum)
            {
                maximum=temp;
            }
        }
    }

    for(int i=0;i<17;i++)
    {
        for(int j=3;j<20;j++)
        {
            int temp=1;
            for(int k=0;k<4;k++)
            {
                temp*=grid[i+k][j-k];
            }
            if(temp>maximum)
            {
                maximum=temp;
            }
        }
    }
    cout<<maximum<<endl;
    
    return 0;
}