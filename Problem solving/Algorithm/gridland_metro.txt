#!/bin/python

import math
import os
import random
import re
import sys

# Complete the gridlandMetro function below.
def gridlandMetro(n, m, k, track):
    track=sorted(track,key=lambda k:k[0])
    total=0
    flag=0
    left=[]
    right=[]
    if len(track)==0:
        return n*m
    for i in range(0,len(track)):
        if flag==0:
            left.append(track[0][1])
            right.append(track[0][2])
            flag=1
        elif track[i][0]!=track[i-1][0]:
            overall=0
            for l in range(0,len(left)):
                overall+=right[l]-left[l]+1
            total+=overall
            left=[]
            right=[]
            left.append(track[i][1])
            right.append(track[i][2])
        else:
            for j in range(0,len(left)):
                if track[i][1]<left[j] and track[i][2]>right[j]:
                    left[j]=track[i][1]
                    right[j]=track[i][2]
                elif track[i][1]<left[j] and track[i][2]>=left[j]:
                    left[j]=track[i][1]
                elif track[i][1]<=right[j] and track[i][2]>right[j]:
                    right[j]=track[i][2]
                elif track[i][1]>=left[j] and track[i][2]<=right[j]:
                    continue
                else:
                    left.append(track[i][1])
                    right.append(track[i][2])
    overall=0
    for l in range(0,len(left)):
        overall+=right[l]-left[l]+1
    total+=overall
    print(total)
    return n*m-total
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    nmk = raw_input().split()

    n = int(nmk[0])

    m = int(nmk[1])

    k = int(nmk[2])

    track = []

    for _ in xrange(k):
        track.append(map(int, raw_input().rstrip().split()))

    result = gridlandMetro(n, m, k, track)

    fptr.write(str(result) + '\n')

    fptr.close()
