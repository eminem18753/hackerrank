#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int lexicographic_sort(const char* a, const char* b) 
{
    while(*(a)!=NULL&&*(b)!=NULL)
    {
        if(*a>*b)
        {
            return 1;
        }
        else if(*a<*b)
        {
            return 0;
        }
        a++;
        b++;
    }
    if(*a==NULL)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}

int lexicographic_sort_reverse(const char* a, const char* b) 
{
    while(*(a)!=NULL&&*(b)!=NULL)
    {
        if(*a>*b)
        {
            return 0;
        }
        else if(*a<*b)
        {
            return 1;
        }
        a++;
        b++;
    }
    if(*a==NULL)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

int sort_by_number_of_distinct_characters(const char* a, const char* b) 
{
    int c1[26];
    int c2[26];
    memset(c1,0,sizeof(c1));
    memset(c2,0,sizeof(c2));
    char *c=a;
    char *d=b;
    while(*(a)!=NULL)
    {
        c1[*a-97]=1;
        a++;
    }
    while(*(b)!=NULL)
    {
        c2[*b-97]=1;
        b++;
    }
    int count1=0;
    int count2=0;
    for(int i=0;i<26;i++)
    {
        if(c1[i]==1)
        {
            count1+=1;
        }
        if(c2[i]==1)
        {
            count2+=1;
        }
    }
    if(count1>count2)
    {
        return 1;
    }
    else if(count1<count2)
    {
        return 0;
    }
    a=c;
    b=d;
    
    while(*(a)!=NULL&&*(b)!=NULL)
    {
        if(*a>*b)
        {
            return 1;
        }
        else if(*a<*b)
        {
            return 0;
        }
        a++;
        b++;
    }
    if(*a==NULL)
    {
        return 0;
    }
    else
    {
        return 1;
    }    
}

int sort_by_length(const char* a, const char* b) 
{
    char *c=a;
    char *d=b;

    int count1=0;
    int count2=0;
    while(*(a)!=NULL)
    {
        count1+=1;
        a++;
    }
    while(*(b)!=NULL)
    {
        count2+=1;
        b++;
    }
    if(count1>count2)
    {
        return 1;
    }
    else if(count1<count2)
    {
        return 0;
    }

    a=c;
    b=d;
    
    while(*(a)!=NULL&&*(b)!=NULL)
    {
        if(*a>*b)
        {
            return 1;
        }
        else if(*a<*b)
        {
            return 0;
        }
        a++;
        b++;
    }
    if(*a==NULL)
    {
        return 0;
    }
    else
    {
        return 1;
    }    
}

void string_sort(char** arr,const int len,int (*cmp_func)(const char* a, const char* b))
{
    for(int i=1;i<len;i++)
    {
        for(int j=0;j<i;j++)
        {
            if(cmp_func(arr[i],arr[j])==0)
            {
                char *temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
}


int main() 
{
    int n;
    scanf("%d", &n);
  
    char** arr;
	arr = (char**)malloc(n * sizeof(char*));
  
    for(int i = 0; i < n; i++){
        *(arr + i) = malloc(1024 * sizeof(char));
        scanf("%s", *(arr + i));
        *(arr + i) = realloc(*(arr + i), strlen(*(arr + i)) + 1);
    }
  
    string_sort(arr, n, lexicographic_sort);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);
    printf("\n");

    string_sort(arr, n, lexicographic_sort_reverse);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");

    string_sort(arr, n, sort_by_length);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);    
    printf("\n");

    string_sort(arr, n, sort_by_number_of_distinct_characters);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");
}
