#include <bits/stdc++.h>

using namespace std;

// Complete the maxRegion function below.
int r=0;
int c=0;
void dfs(vector<vector<int>> &A,int i,int j)
{
    if(i<0||j<0||i>=(int)A.size()||j>=(int)A[0].size()||A[i][j]==0)
    {
        return;
    }
    c++;
    A[i][j]=0;
    dfs(A,i-1,j);
    dfs(A,i+1,j);
    dfs(A,i,j-1);
    dfs(A,i,j+1);
    dfs(A,i-1,j-1);
    dfs(A,i-1,j+1);
    dfs(A,i+1,j-1);
    dfs(A,i+1,j+1);
}
int maxRegion(vector<vector<int>> grid) 
{
    for(int i=0;i<grid.size();i++)
    {
        for(int j=0;j<grid[i].size();j++)
        {
            c=0;
            dfs(grid,i,j);
            r=max(r,c);
        }
    }
    return r;

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    int m;
    cin >> m;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    vector<vector<int>> grid(n);
    for (int i = 0; i < n; i++) {
        grid[i].resize(m);

        for (int j = 0; j < m; j++) {
            cin >> grid[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int res = maxRegion(grid);

    fout << res << "\n";

    fout.close();

    return 0;
}
