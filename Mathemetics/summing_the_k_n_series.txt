#!/bin/python

import os
import sys

# Complete the solve function below.
factorial=[1]*1002
m=1000000007
def modInverse(n):
    return pow(n,m-2,m)
def choose(n,k):
    return (factorial[n]%m)*modInverse(factorial[n-k])*modInverse(factorial[k])%m
def bernoulli(n, memo = [1]):
    if n >= len(memo):
        if n == 1:
            memo.append(-modInverse(n + 1) % m)
        elif n % 2 == 1 and n > 1:
            memo.append(0)
        else:
            x = choose(n + 1, 1) * bernoulli(1)
            x += sum(choose(n + 1, i) * bernoulli(i) for i in range(0, n, 2))
            memo.append(-x * modInverse(n + 1) % m)

    return memo[n]
def solve(n, k):
    result=0
    for i in range(0,k+1):
        result+=pow(-1,i)*choose(k+1,i)*bernoulli(i)*pow(n,k+1-i,m)
    result*=modInverse(k+1)
    return result%m
if __name__ == '__main__':
    for i in range(1,1002):
        factorial[i]=(factorial[i-1]*i)%m
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(raw_input())

    for t_itr in xrange(t):
        nk = raw_input().split()

        n = int(nk[0])

        k = int(nk[1])

        result = solve(n, k)

        fptr.write(str(result) + '\n')

    fptr.close()
