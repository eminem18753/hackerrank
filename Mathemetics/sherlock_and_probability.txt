#!/bin/python

from __future__ import print_function

import os
import sys
from collections import Counter
# Complete the solve function below.
def gcd(a,b):
    if b==0:
        return a
    else:
        return gcd(b,a%b)
def solve(n, k, s):
    flag1=0
    count=0
    total=[]
    accumulate=[]
    for i in range(0,n):
        if s[i]=='1':
            count+=1
            total.append(i)
            flag1=1
        accumulate.append(count)
    if flag1==0:
        return str(0)+"/"+str(1)
    flag2=0
    for i in range(0,n):
        if s[i]=='0':
            flag2=1
            break
    if flag2==0 and k>=n-1:
        return str(1)+"/"+str(1)
    upper=0
    if k>=n-1:
        if flag2==1:
            upper=len(total)*len(total)
        else:
            upper=len(total)*len(total)
        common=gcd(upper,n*n)
        return str(upper/common)+"/"+str(n*n/common)
    else:
        for i in range(0,len(total)):
            if total[i]-k<0 and total[i]+k>n-1:
                if flag2==1:
                    upper+=len(total)
                else:
                    upper+=len(total)
            elif total[i]-k<0:
                upper+=accumulate[total[i]+k]
            elif total[i]+k>n-1:
                addition=0
                if s[total[i]-k]=='1':
                    addition=1
                upper+=len(total)-accumulate[total[i]-k]+addition
            else:
                addition=0
                if s[total[i]-k]=='1':
                    addition=1
                upper+=accumulate[total[i]+k]-accumulate[total[i]-k]+addition
        common=gcd(upper,n*n)
        return str(upper/common)+"/"+str(n*n/common)
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(raw_input())

    for t_itr in xrange(t):
        nk = raw_input().split()

        n = int(nk[0])

        k = int(nk[1])

        s = raw_input()

        result = solve(n, k, s)

        fptr.write(result + '\n')

    fptr.close()
