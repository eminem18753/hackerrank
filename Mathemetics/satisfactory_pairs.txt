#include <bits/stdc++.h>

using namespace std;

// Complete the solve function below.

const int maxn=300005;
vector<int> s[maxn];
int f[maxn];
int solve(int n) 
{
    int result=0;
    for(int i=1;i<=n/2;i++)
    {
        for(int j=1;j<n;j++)
        {
            if(i*j>=n)
            {
                break;
            }
            s[i*j].push_back(i);
            if(i!=j)
            {
                s[i*j].push_back(j);
            }
        }
    }
    
    for(int i=1;i<=n/2;i++)
    {
        for(int j=1;j<n;j++)
        {
            if(i*j>=n)
            {
                break;
            }
            int t=n-i*j;
            if(t<=i)
            {
                break;
            }
            for(int k=0;k<s[t].size();k++)
            {
                if(s[t][k]>i&&f[s[t][k]]!=i)
                {
                    f[s[t][k]]=i;
                    result+=1;
                }
            }
        }
    }
    return result;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    int result = solve(n);

    fout << result << "\n";

    fout.close();

    return 0;
}
