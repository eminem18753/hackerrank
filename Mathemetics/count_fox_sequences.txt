#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

const int maxn=100001;
const int mod=1000000007;
int t,n,m,mm;
int fact[maxn<<1];
int inv[maxn];
int ans;
inline int C(int n,int m)
{
    return (long long)fact[n]*inv[m]%mod*inv[n-m]%mod;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    fact[0]=1;
    for(int i=1;i<maxn<<1;i++)
    {
        fact[i]=((long long)fact[i-1]*i)%mod;
    }
    inv[1]=1;
    for(int i=2;i<maxn;i++)
    {
        inv[i]=mod-(long long)mod/i*inv[mod%i]%mod;
    }
    inv[0]=1;
    for(int i=2;i<maxn;i++)
    {
        inv[i]=(long long)inv[i-1]*inv[i]%mod;
    }
    cin>>t;
    while(t--)
    {
        cin>>n;
        cin>>m;
        cin>>mm;
        m=mm-m+1;
        if(m==1)
        {
            cout<<1<<endl;
            continue;
        }
        ans=0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1,k=n/i<m?n/i:m;j<=k;j++)
            {
                ans=(ans+((j-1)&1?(long long)-1:(long long)1)*C(m-1,j-1)*C(n-i*j+m-2,n-i*j))%mod;
            }
        }
        ans=(long long)ans*m%mod;
        if(ans<0)
        {
            ans+=mod;
        }
        cout<<ans<<endl;
    }
    return 0;
}
